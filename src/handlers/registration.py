from aiogram.types import Message
from aiogram.dispatcher import FSMContext

from misc import dp
from models import User
from keyboards import main_kb
from states import Registration


async def start_registration(message: Message):
    await Registration.key.set()
    await message.answer('üëã –•–∞—é—à–∫–∏! \n\n–ü—Ä–∏–¥—É–º–∞–π —Å–≤–æ—é –∫–ª—é—á. '
                         '–≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –ª—é–±–æ–µ —Å–ª–æ–≤–æ, –Ω–µ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–µ, '
                         '–∫–æ—Ç–æ—Ä–æ–µ —Ç—ã –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –∑–∞–±—É–¥–µ—à—å. \n\n–û–Ω–æ –Ω—É–∂–Ω–æ, '
                         '—á—Ç–æ–±—ã –æ–±–µ–∑–æ–ø–∞—Å–∏—Ç—å –≤–≤–µ–¥–µ–Ω—ã–µ —Ç–æ–±–æ–π –ø–∞—Ä–æ–ª–∏ - '
                         '–±–µ–∑ —ç—Ç–æ–≥–æ –∫–ª—é—á–∞ –∏—Ö –Ω–∏–∫—Ç–æ –Ω–µ —É–∑–Ω–∞–µ—Ç')


@dp.message_handler(state=Registration.key)
async def confirm_key(message: Message, state: FSMContext):
    await state.update_data(key=message.text)
    await message.delete()
    await Registration.key_confirmation.set()
    await message.answer('–ê —Ç–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —ç—Ç–æ—Ç –∫–ª—é—á –µ—â–µ —Ä–∞–∑')


@dp.message_handler(state=Registration.key_confirmation)
async def save_key(message: Message, state: FSMContext):
    await message.delete()

    if (await state.get_data())['key'] == message.text:
        User.create(user_id=message.from_user.id, key=message.text)
        await state.finish()
        await message.answer('üéâ –£—Ä–∞! '
                             '–¢–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –ø–∞—Ä–æ–ª—å. '
                             '–ì–ª–∞–≤–Ω–æ–µ, –Ω–µ –∑–∞–±—ã–≤–∞–π –∫–ª—é—á',
                             reply_markup=main_kb)
    else:
        await state.finish()
        await Registration.key.set()
        await message.answer('üò¨ –•–º, –Ω–µ —Å—Ö–æ–¥–∏—Ç—Å—è. '
                             '–î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º —Å–Ω–∞—á–∞–ª–∞, –ø—Ä–∏–¥—É–º–∞–π —Å–≤–æ–π –∫–ª—é—á')
